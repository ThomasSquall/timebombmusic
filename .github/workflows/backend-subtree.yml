name: Build Backend Subtree

permissions:
  contents: write

on:
  push:
    branches:
      - master
    paths:
      - backend/**
      - .github/workflows/backend-subtree.yml
  workflow_dispatch:

jobs:
  split-backend:
    name: Split backend subtree
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Prepare backend environment file
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CLIENT_ORIGIN_URL: ${{ secrets.CLIENT_ORIGIN_URL }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_URL: ${{ secrets.APP_URL }}
        run: |
          cp backend/.env.example backend/.env
          python - <<'PY'
          import os

          path = "backend/.env"
          replacements = {
              "APP_DEBUG": "false",
              "JWT_SECRET": os.environ["JWT_SECRET"],
              "CLIENT_ORIGIN_URL": os.environ["CLIENT_ORIGIN_URL"],
              "PUSHER_APP_ID": os.environ["PUSHER_APP_ID"],
              "PUSHER_APP_KEY": os.environ["PUSHER_APP_KEY"],
              "PUSHER_APP_SECRET": os.environ["PUSHER_APP_SECRET"],
              "DB_DATABASE": os.environ["DB_DATABASE"],
              "DB_USERNAME": os.environ["DB_USERNAME"],
              "DB_PASSWORD": os.environ["DB_PASSWORD"],
              "APP_URL": os.environ["APP_URL"],
          }

          with open(path, "r", encoding="utf-8") as f:
              lines = f.readlines()

          with open(path, "w", encoding="utf-8") as f:
              for original_line in lines:
                  line = original_line.rstrip("\n")
                  if not line or line.lstrip().startswith("#") or "=" not in line:
                      f.write(original_line)
                      continue

                  key, value = line.split("=", 1)
                  if key in replacements:
                      replacement_value = replacements[key]
                      f.write(f"{key}={replacement_value}\n")
                  else:
                      f.write(original_line)
          PY

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create backend subtree branch
        run: |
          git branch -D deploy-backend 2>/dev/null || true
          git subtree split --prefix=backend -b deploy-backend

      - name: Push backend subtree branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin deploy-backend --force
